import { InputBindingController } from '../controller/input-binding';
import { ComponentApi } from './component-api';
interface InputBindingApiEventHandlers {
    change: (value: unknown) => void;
}
/**
 * The API for the input binding between the parameter and the pane.
 * @param In The type inner Tweakpane.
 * @param Out The type outer Tweakpane (= parameter object).
 */
export declare class InputBindingApi<In, Out> implements ComponentApi {
    /**
     * @hidden
     */
    readonly controller: InputBindingController<In, Out>;
    /**
     * @hidden
     */
    constructor(bindingController: InputBindingController<In, Out>);
    get hidden(): boolean;
    set hidden(hidden: boolean);
    dispose(): void;
    on<EventName extends keyof InputBindingApiEventHandlers>(eventName: EventName, handler: InputBindingApiEventHandlers[EventName]): InputBindingApi<In, Out>;
    refresh(): void;
}
export {};
